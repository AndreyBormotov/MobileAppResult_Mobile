#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	АдресЦентральнойБазы = Константы.АдресЦентральнойБазы.Получить();
	ЛогинЦентральнойБазы = Константы.ЛогинЦентральнойБазы.Получить();
	ПарольЦентральнойБазы = Константы.ПарольЦентральнойБазы.Получить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПроверитьДоступностьНаСервере();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура АдресЦентральнойБазыПриИзменении(Элемент)
	ЗаписатьЗначенияКонстант();
КонецПроцедуры

&НаКлиенте
Процедура ЛогинЦентральнойБазыПриИзменении(Элемент)
	ЗаписатьЗначенияКонстант();
КонецПроцедуры

&НаКлиенте
Процедура ПарольЦентральнойБазыПриИзменении(Элемент)
	ЗаписатьЗначенияКонстант();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПроверитьДоступность(Команда)
	ПроверитьДоступностьНаСервере()
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	ВыполнитьОбменНаСервере();
	ПоказатьОповещениеПользователя("Обмен выполнен");
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаписатьЗначенияКонстант()
	Константы.АдресЦентральнойБазы.Установить(АдресЦентральнойБазы);
	Константы.ЛогинЦентральнойБазы.Установить(ЛогинЦентральнойБазы);
	Константы.ПарольЦентральнойБазы.Установить(ПарольЦентральнойБазы);
КонецПроцедуры

&НаСервере
Процедура ПроверитьДоступностьНаСервере()
	НастройкиПодключения = ПолучитьНастройкиПодключения();
	Соединение = УстановитьСоединение(НастройкиПодключения);
	
	Путь = НастройкиПодключения.ПутьНаСервере + "/hs/mobile/ping";
	
	Запрос = Новый HTTPЗапрос(Путь);
	Ответ = Соединение.Получить(Запрос);

	Если Ответ.КодСостояния = 200 Тогда
		Сообщить("Соединение успешно установлено");
	Иначе
		Сообщить(СтрШаблон("Ошибка связи с сервером %1", Ответ.КодСостояния));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиПодключения()
	
	// http://localhost/homework15_4Central/hs/mobile/ping
	
	//Подготовка необходимой структуры
	Результат = Новый Структура;
	Результат.Вставить("ЗащищенноеСоединение");
	Результат.Вставить("АдресСервера");
	Результат.Вставить("ПутьНаСервере");
	Результат.Вставить("Логин");
	Результат.Вставить("Пароль");
	
	Если СтрНачинаетсяС(АдресЦентральнойБазы, "https" ) Тогда
		Результат.ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	КонецЕсли;
	
	ПозицияРазделителя = СтрНайти(АдресЦентральнойБазы, "://" );
	АдресБезПротокола = Сред(АдресЦентральнойБазы, ПозицияРазделителя + 3); // localhost/homework15_4Central
	
	ПозицияРазделителя = СтрНайти(АдресБезПротокола, "/");
	
	Результат.АдресСервера = Лев(АдресБезПротокола, ПозицияРазделителя - 1); // localhost
	Результат.ПутьНаСервере = Сред(АдресБезПротокола, ПозицияРазделителя); // /homework15_4Central
	
	Результат.Логин = ЛогинЦентральнойБазы;
	Результат.Пароль = ПарольЦентральнойБазы;
	
	Возврат Результат;
				
КонецФункции

&НаСервере
Функция УстановитьСоединение(НастройкиПодключения)
	
	Возврат Новый HTTPСоединение(НастройкиПодключения.АдресСервера, ,
	НастройкиПодключения.Логин,
	НастройкиПодключения.Пароль,,,
	НастройкиПодключения.ЗащищенноеСоединение);
		
КонецФункции 

&НаСервере
Процедура ВыполнитьОбменНаСервере()
	
	ПолучитьДанныеДоставок();
	//ОтправитьДанныеДоставок();
	
КонецПроцедуры
&НаСервере
Процедура ПолучитьДанныеДоставок()
	
	НастройкиПодключения = ПолучитьНастройкиПодключения();
	Соединение = УстановитьСоединение(НастройкиПодключения);
	
	Путь = НастройкиПодключения.ПутьНаСервере + "/hs/mobile/exchange";
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("X-MobileID", Строка(СистемнаяИнформация.ИдентификаторКлиента));
	
	Запрос = Новый HTTPЗапрос(Путь, Заголовки);
	
	Ответ = Соединение.Получить(Запрос);

	Если Ответ.КодСостояния <> 200 Тогда
		Сообщить(СтрШаблон("Ошибка связи с сервером %1", Ответ.КодСостояния));
		Возврат
	КонецЕсли;
	
	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	ДанныеОтвета = ПрочитатьЗначениеJSON(ТелоОтвета);
	
	Для Каждого ДанныеДокумента Из ДанныеОтвета Цикл
		
		Ссылка = Документы.Доставка.ПолучитьСсылку(
			Новый УникальныйИдентификатор(ДанныеДокумента.Идентификатор));
			
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		
		Если ДокументОбъект = Неопределено Тогда
			ДокументОбъект = Документы.Доставка.СоздатьДокумент();
			ДокументОбъект.УстановитьСсылкуНового(Ссылка);
		КонецЕсли;
		
		ДокументОбъект.Дата = ПрочитатьДатуJSON(ДанныеДокумента.Дата, ФорматДатыJSON.ISO);
		ДокументОбъект.Номер = ДанныеДокумента.Номер;
		ДокументОбъект.Комментарий = ДанныеДокумента.Комментарий;
		ДокументОбъект.Записать();
		
	КонецЦикла
КонецПроцедуры

//&НаСервере
//Процедура ОтправитьДанныеДоставок()
//	
//	НастройкиПодключения = ПолучитьНастройкиПодключения();
//	Соединение = УстановитьСоединение(НастройкиПодключения);
//	
//	Путь = НастройкиПодключения.ПутьНаСервере + "/hs/mobile/exchange";
//	
//	СистемнаяИнформация = Новый СистемнаяИнформация;
//	
//	Заголовки = Новый Соответствие;
//	Заголовки.Вставить("X-MobileID", Строка(СистемнаяИнформация.ИдентификаторКлиента));
//	
//	Запрос = Новый HTTPЗапрос(Путь, Заголовки);
//	
//	Ответ = Соединение.Получить(Запрос);

//	Если Ответ.КодСостояния <> 200 Тогда
//		Сообщить(СтрШаблон("Ошибка связи с сервером %1", Ответ.КодСостояния));
//		Возврат
//	КонецЕсли;
//	
//	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
//	
//	ДанныеОтвета = ПрочитатьЗначениеJSON(ТелоОтвета);
//	
//	Для Каждого ДанныеДокумента Из ДанныеОтвета Цикл
//		
//		Ссылка = Документы.Доставка.ПолучитьСсылку(
//			Новый УникальныйИдентификатор(ДанныеДокумента.Идентификатор));
//			
//		ДокументОбъект = Ссылка.ПолучитьОбъект();
//		
//		Если ДокументОбъект = Неопределено Тогда
//			ДокументОбъект = Документы.Доставка.СоздатьДокумент();
//			ДокументОбъект.УстановитьСсылкуНового(Ссылка);
//		КонецЕсли;
//		
//		ДокументОбъект.Дата = ПрочитатьДатуJSON(ДанныеДокумента.Дата, ФорматДатыJSON.ISO);
//		ДокументОбъект.Номер = ДанныеДокумента.Номер;
//		ДокументОбъект.Комментарий = ДанныеДокумента.Комментарий;
//		ДокументОбъект.Записать();
//		
//	КонецЦикла
//	
//КонецПроцедуры
#КонецОбласти



