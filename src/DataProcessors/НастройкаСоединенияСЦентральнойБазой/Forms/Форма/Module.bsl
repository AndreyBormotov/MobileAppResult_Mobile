#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	АдресЦентральнойБазы = Константы.АдресЦентральнойБазы.Получить();
	ЛогинЦентральнойБазы = Константы.ЛогинЦентральнойБазы.Получить();
	ПарольЦентральнойБазы = Константы.ПарольЦентральнойБазы.Получить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПроверитьДоступностьНаСервере();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура АдресЦентральнойБазыПриИзменении(Элемент)
	ЗаписатьЗначенияКонстант();
КонецПроцедуры

&НаКлиенте
Процедура ЛогинЦентральнойБазыПриИзменении(Элемент)
	ЗаписатьЗначенияКонстант();
КонецПроцедуры

&НаКлиенте
Процедура ПарольЦентральнойБазыПриИзменении(Элемент)
	ЗаписатьЗначенияКонстант();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПроверитьДоступность(Команда)
	ПроверитьДоступностьНаСервере()
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	ВыполнитьОбменНаСервере();
	ПоказатьОповещениеПользователя("Обмен выполнен");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаписатьЗначенияКонстант()
	Константы.АдресЦентральнойБазы.Установить(АдресЦентральнойБазы);
	Константы.ЛогинЦентральнойБазы.Установить(ЛогинЦентральнойБазы);
	Константы.ПарольЦентральнойБазы.Установить(ПарольЦентральнойБазы);
КонецПроцедуры

&НаСервере
Процедура ПроверитьДоступностьНаСервере()
	НастройкиПодключения = ПолучитьНастройкиПодключения();
	Соединение = УстановитьСоединение(НастройкиПодключения);
	
	Путь = НастройкиПодключения.ПутьНаСервере + "/hs/mobile/ping";
	
	Запрос = Новый HTTPЗапрос(Путь);
	Ответ = Соединение.Получить(Запрос);

	Если Ответ.КодСостояния = 200 Тогда
		Сообщить("Соединение успешно установлено");
	Иначе
		Сообщить(СтрШаблон("Ошибка связи с сервером %1", Ответ.КодСостояния));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиПодключения()
	
	// http://localhost/homework15_4Central/hs/mobile/ping
	
	//Подготовка необходимой структуры
	Результат = Новый Структура;
	Результат.Вставить("ЗащищенноеСоединение");
	Результат.Вставить("АдресСервера");
	Результат.Вставить("ПутьНаСервере");
	Результат.Вставить("Логин");
	Результат.Вставить("Пароль");
	
	Если СтрНачинаетсяС(АдресЦентральнойБазы, "https" ) Тогда
		Результат.ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	КонецЕсли;
	
	ПозицияРазделителя = СтрНайти(АдресЦентральнойБазы, "://" );
	АдресБезПротокола = Сред(АдресЦентральнойБазы, ПозицияРазделителя + 3); // localhost/homework15_4Central
	
	ПозицияРазделителя = СтрНайти(АдресБезПротокола, "/");
	
	Результат.АдресСервера = Лев(АдресБезПротокола, ПозицияРазделителя - 1); // localhost
	Результат.ПутьНаСервере = Сред(АдресБезПротокола, ПозицияРазделителя); // /homework15_4Central
	
	Результат.Логин = ЛогинЦентральнойБазы;
	Результат.Пароль = ПарольЦентральнойБазы;
	
	Возврат Результат;
				
КонецФункции

&НаСервере
Функция УстановитьСоединение(НастройкиПодключения)
	
	Возврат Новый HTTPСоединение(НастройкиПодключения.АдресСервера, ,
	НастройкиПодключения.Логин,
	НастройкиПодключения.Пароль,,,
	НастройкиПодключения.ЗащищенноеСоединение);
		
КонецФункции 

&НаСервере
Процедура ВыполнитьОбменНаСервере()
	
	ПолучитьДанныеДоставки();
	ОтправитьДанныеДоставок();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеДоставки()
	
	НастройкиПодключения = ПолучитьНастройкиПодключения();
	Соединение = УстановитьСоединение(НастройкиПодключения);
	
	Путь = НастройкиПодключения.ПутьНаСервере + "/hs/mobile/exchange";
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("X-MobileID", Строка(СистемнаяИнформация.ИдентификаторКлиента));
	
	Запрос = Новый HTTPЗапрос(Путь, Заголовки);

	Ответ = Соединение.Получить(Запрос);

	Если Ответ.КодСостояния <> 200 Тогда
		Сообщить(СтрШаблон("Ошибка связи с сервером %1", Ответ.КодСостояния));
		Возврат
	КонецЕсли;
	
	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
		
		ДанныеОтвета = ПрочитатьЗначениеJSON(ТелоОтвета);
		
		Для Каждого Элемент Из ДанныеОтвета Цикл
			
			// Записываем в ИБ Контрагентов
			Если Элемент.ВидОбъекта = "Контрагент" Тогда
				Ссылка = Справочники.Контрагенты.ПолучитьСсылку(
				Новый УникальныйИдентификатор(Элемент.Идентификатор));
				
				КонтрагентОбъект = Ссылка.ПолучитьОбъект();
				
				Если КонтрагентОбъект = Неопределено Тогда
					КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
					КонтрагентОбъект.УстановитьСсылкуНового(Ссылка);
				КонецЕсли;
				
				//КонтрагентОбъект.Код = Элемент.Код;
				КонтрагентОбъект.Наименование = Элемент.Наименование;
				КонтрагентОбъект.Записать();
			КонецЕсли;
			
			// Записываем в ИБ Номенклатуру
			Если Элемент.ВидОбъекта = "Номенклатура" Тогда
				Ссылка = Справочники.Номенклатура.ПолучитьСсылку(
				Новый УникальныйИдентификатор(Элемент.Идентификатор));
				
				НоменклатураОбъект = Ссылка.ПолучитьОбъект();
				
				Если НоменклатураОбъект = Неопределено Тогда
					НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
					НоменклатураОбъект.УстановитьСсылкуНового(Ссылка);
				КонецЕсли;
				
				//НоменклатураОбъект.Код = Элемент.Код;
				НоменклатураОбъект.Наименование = Элемент.Наименование;
				НоменклатураОбъект.Записать();
			КонецЕсли;
		
		
			// Записываем в ИБ Документы
			Если Элемент.ВидОбъекта = "Документ" Тогда
				Ссылка = Документы.Доставка.ПолучитьСсылку(
				Новый УникальныйИдентификатор(Элемент.Идентификатор));
				
				ДокументОбъект = Ссылка.ПолучитьОбъект();
				
				Если ДокументОбъект = Неопределено Тогда
					ДокументОбъект = Документы.Доставка.СоздатьДокумент();
					ДокументОбъект.УстановитьСсылкуНового(Ссылка);
				КонецЕсли;
				
				ДокументОбъект.Дата = ПрочитатьДатуJSON(Элемент.Дата, ФорматДатыJSON.ISO);
				ДокументОбъект.Номер = Элемент.Номер;
				ДокументОбъект.Контрагент = Справочники.Контрагенты.ПолучитьСсылку(
											Новый УникальныйИдентификатор(Элемент.Контрагент));
				ДокументОбъект.Комментарий = Элемент.Комментарий;
				ДокументОбъект.КонтактныйТелефон = Элемент.КонтактныйТелефон;
				ДокументОбъект.АдресДоставки = Элемент.АдресДоставки;
				
				ВыборкаТовары = Элемент.Товары;
				
				Для Каждого Элемент Из ВыборкаТовары Цикл
					
					НоваяСтрокаТЧ = ДокументОбъект.Товары.Добавить();
					НоваяСтрокаТЧ.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(
											Новый УникальныйИдентификатор(Элемент.Номенклатура));
					НоваяСтрокаТЧ.Количество = Элемент.Количество;
					
				КонецЦикла;
				
				ДокументОбъект.Записать();
				
			КонецЕсли;
		КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ОтправитьДанныеДоставок()
	
	НастройкиПодключения = ПолучитьНастройкиПодключения();
	Соединение = УстановитьСоединение(НастройкиПодключения);
	
	Путь = НастройкиПодключения.ПутьНаСервере + "/hs/mobile/exchange";
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("X-MobileID", Строка(ИдентификаторКлиента));
	
	Запрос = Новый HTTPЗапрос(Путь, Заголовки);
	Запрос.УстановитьТелоИзСтроки(ПодготовитьТелоЗапроса(ИдентификаторКлиента));
	
	Ответ = Соединение.Отправить(Запрос);

	Если Ответ.КодСостояния <> 200 Тогда
		Сообщить(СтрШаблон("Ошибка связи с сервером %1", Ответ.КодСостояния));
		Возврат
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьТелоЗапроса(ИдентификаторКлиента)
	
	Узел = ПланыОбмена.ОбменСЦентральнойБазой.НайтиПоКоду(ИдентификаторКлиента);
	
	Если НЕ ЗначениеЗаполнено(Узел) Тогда
		УзелОбъект = ПланыОбмена.ОбменСЦентральнойБазой.СоздатьУзел();
		
		УзелОбъект.Наименование = "Центральная база";
		УзелОбъект.Код = ИдентификаторКлиента;
		УзелОбъект.Записать();
		Узел = УзелОбъект.Ссылка;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ДоставкаИзменения.Ссылка КАК Ссылка,
					|	ДоставкаИзменения.Ссылка.Комментарий КАК Комментарий,
					|	ДоставкаИзменения.Ссылка.Фото КАК Фото,
					|	ДоставкаИзменения.Ссылка.Статус КАК Статус
					|ИЗ
					|	Документ.Доставка.Изменения КАК ДоставкаИзменения
					|ГДЕ
					|	ДоставкаИзменения.Узел = &Узел";
	
	Запрос.УстановитьПараметр("Узел", Узел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	КонецЕсли;

	ДанныеДляОтправки = Новый Массив;
	ОтправленныеОбъекты = Новый Массив;
	
//Добавляем документы для отправки
	Выборка = РезультатЗапроса.Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		ДанныеДокумента = Новый Структура;
		ДанныеДокумента.Вставить("Идентификатор", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
		ДанныеДокумента.Вставить("Комментарий", Выборка.Комментарий);
		
		СтрокаФото = Base64Строка(Выборка.Фото);
		ДанныеДокумента.Вставить("Фото", СтрокаФото);
		
		СтатусДокумента = Выборка.Статус;
		
		СтрокаСтатус = XMLСтрока(СтатусДокумента);
		ДанныеДокумента.Вставить("Статус", СтрокаСтатус);
		
		ДанныеДляОтправки.Добавить(ДанныеДокумента);
		
		ОтправленныеОбъекты.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	ТелоОтвета = ЗаписатьЗначениеJSON(ДанныеДляОтправки);
	
	Если ЗначениеЗаполнено(ОтправленныеОбъекты) Тогда
		ПланыОбмена.УдалитьРегистрациюИзменений(Узел, ОтправленныеОбъекты);
	КонецЕсли;
	
	Возврат ТелоОтвета
	
КонецФункции

#КонецОбласти



